@use "./../options" as properties;

// preview
#{'.' +  #{properties.$componentPreviewClass}}{
  box-sizing: border-box;
  background-color: var(--second-color);
  width: auto;
  min-height: 8rem;
  padding: 0.38rem 0.7rem;
  justify-content: space-between;
  flex-direction: column;
  display: flex;
  color: var(--text-color);
}

// text preview for text
#{'.' +  #{properties.$componentPreviewTextClass}}{
  display: flex;
  flex: 1;
  justify-content: center;
  align-items: center;
}

// preview item
#{'.' +  #{properties.$componentItem}}{
  min-height: 2rem;
  position: relative;
  display: block;
  background:  var(--main-color);
  border-radius: .3rem .3rem .2rem .2rem;
  outline: .1rem solid var(--main-color-high);
  overflow: hidden;
  transform: rotate(0);
  transition: 0s all;
  &:not(:last-child) {
    margin-bottom: .4rem;
  }
}

// preview item
#{'.' +  #{properties.$componentItem}} {
  .progress {
    width: 100%;
    left: 0;
    right: 0;
    position: absolute;
    display: flex;
    z-index: 3;
    height: #{properties.$componentBarHeight};
    bottom: 0;
    margin-top: auto;
    background-color: var(--main-color);

    .bar {
      position: absolute;
      height: #{properties.$componentBarHeight};
      width: 30%;
      transition: .4s width ease-out;
      background: var(--text-color);
    }
  }
  .info {
    width: 100%;
    height: 100%;
    display: flex;

    .text {
      display: flex;
      flex: 1;
      align-items: center;
      padding: .4rem 0 .4rem 1rem;
      flex-direction: column;
      max-width: 70%;
      span {
        display: block;
        text-align: left;
        width: 100%;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        &[data-upload-name]{
          font-size: .85rem;
        }
        &[data-upload-size]{
          font-weight: bold;
          font-size: .95rem;
        }
      }
    }

    .percentage {
      width: 30%;
      display: flex;
      border-left: 2px solid var(--text-color);
      justify-content: center;
      align-items: center;
    }
  }
  &:not(#{'.' +  #{properties.$componentItemImage}}) {
    &:hover .actions {
      display: flex !important;
      background: var( --main-color) !important;
      position: absolute;
      right: 0;
      bottom: 0;
      top: 0;
      min-width: 5rem;
      width: 35%;
      max-width: 10rem;
      box-shadow: -13px 2px 25px 0px rgba(0,0,0,0.75);
      transition: 0s all;
      button:hover {
        transition-delay:.1s;
        background-color: var(--main-color-high) !important;
      }
    }
    .actions {
      button {
        border-left: 1px solid var(--text-color);
        width: 100%;
      }
    }
    .text {
      max-width: 65% !important;
      padding-bottom: .8rem !important;
    }
  }
}

// external input
#{'.' +  #{properties.$componentClassExternal}} {
  background: var(--main-color-high);
  border-top: 2px solid var(--main-color-low);
  border-bottom: 2px solid var(--main-color-low);
  transition: height .3s linear;
  .row {
    padding: .4rem 0;
    display: flex;
  }
  label{
    display: flex;
    align-items: center;
    width: auto;
    color: var(--text-color);
    padding: 0 2rem;
    font-size: .9rem;
    font-weight: bold;
  }
  input {
    border: none;
    border-radius: .13rem;
    font-size: 0.74rem;
    line-height: calc(0.74rem*.93);
    color: var(--text-color);
    background: var(--main-color-low);
    transition: all .3s ease;
    height: 1.6rem;
    max-height: 1.6rem;
    outline: 1px solid var(--main-color-low);
    box-shadow: none;
    padding: 0 .2rem;
    display: flex;
    min-width: 60%;
    &:focus, &:focus-within{
      outline-color: var(--high-color);
    }
  }
}

// image preview
#{'.' +  #{properties.$componentItemImage}}{
  &:hover .actions{
    display: block !important;
    transition-delay:.3s;
  }
  .actions {
    display: none;
    position: absolute;
    z-index: 3;
    bottom: 10%;
    right: 2%;
    transition: 0s all;
    transition-delay:.3s;
    button {
      opacity: .85;
      padding: #{properties.$componentBarHeight} #{properties.$componentBarHeight};
      margin-left: #{properties.$componentBarHeight};
      border-radius: 50%;
      width: 2.6rem !important;
      height: 2.6rem !important;
      background: var(--main-color);
      outline: 1px solid var(--text-color);
      transition: 0s all;
      &:hover, &:focus, &:focus-within, &:focus-visible {
        opacity: 1;
      }
    }
  }
  .preview{
    width: 100%;
    height: 100%;
    display: block;
    min-height: 7rem;
    max-height: 7rem;
    background-color: var(--second-color);
    position: relative;
    canvas, .wrapper {
      position: absolute;
      z-index: 1;
      inset: 0;
    }
    .wrapper {
      z-index: 2;
      opacity: .55;
      background-color: var(--high-color);
    }
  }
  .info{
    border-bottom: 2px solid var(--text-color);
  }
}